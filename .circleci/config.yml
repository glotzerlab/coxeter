# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  style-check:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: style-check
          command: |
            pip install --user -U flake8==3.7.1
            python -m flake8 --show-source euclid/


  test-3.7: &test-template
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:

      - checkout

      - run:
          name: Run tests
          command: |
            python --version
            pip install . --user
            python -c "import numpy; print('numpy', numpy.__version__)"
            python -c "import scipy; print('scipy', scipy.__version__)"
            python -m unittest discover tests/ -v

  test-3.6:
    <<: *test-template
    docker:
      - image: circleci/python:3.6

#  test-deploy-pypi:
#    docker:
#      - image: circleci/python:3.7
#    working_directory: ~/repo
#    steps:
#      - checkout
#      - run:
#          name: test-deploy-pypi
#          command: |
#            pip install --user -U -r .requirements-deploy.txt
#            bash .test-deploy.bash

#  deploy-pypi:
#    docker:
#      - image: circleci/python:3.7
#    working_directory: ~/repo
#    steps:
#      - checkout
#      - run:
#          name: deploy-pypi
#          command: |
#            pip install --user -U -r .requirements-deploy.txt
#            bash .deploy.bash


workflows:
  version: 2
  test:
    jobs:
      - style-check
      - test-3.6
#          requires:
#            - style-check
      - test-3.7
#          requires:
#            - style-check
#      - test-deploy-pypi:
#          filters:
#            branches:
#              only: /release\/.*/
#          requires:
#            - test-3.6
#            - test-3.7
#  deploy:
#    jobs:
#      - deploy-pypi:
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /v.*/
